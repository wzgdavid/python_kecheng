Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> [n*n for n in range(1,11)]
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
>>> [n*n if n%2==1 else n for n in range(1,11)]
[1, 2, 9, 4, 25, 6, 49, 8, 81, 10]
>>> [n*m for n in range(1,11)for m in range(1,11)]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 9, 18, 27, 36, 45, 54, 63, 72, 81, 90, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
>>> {n*m for n in range(1,11)for m in range(1,11)}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 30, 32, 35, 36, 40, 42, 45, 48, 49, 50, 54, 56, 60, 63, 64, 70, 72, 80, 81, 90, 100}
>>> {n:n*n for n in range(1,11)}
{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100}
>>> {(n,m):n*m for n in range(1,11)for m in range(1,11)}
{(1, 1): 1, (1, 2): 2, (1, 3): 3, (1, 4): 4, (1, 5): 5, (1, 6): 6, (1, 7): 7, (1, 8): 8, (1, 9): 9, (1, 10): 10, (2, 1): 2, (2, 2): 4, (2, 3): 6, (2, 4): 8, (2, 5): 10, (2, 6): 12, (2, 7): 14, (2, 8): 16, (2, 9): 18, (2, 10): 20, (3, 1): 3, (3, 2): 6, (3, 3): 9, (3, 4): 12, (3, 5): 15, (3, 6): 18, (3, 7): 21, (3, 8): 24, (3, 9): 27, (3, 10): 30, (4, 1): 4, (4, 2): 8, (4, 3): 12, (4, 4): 16, (4, 5): 20, (4, 6): 24, (4, 7): 28, (4, 8): 32, (4, 9): 36, (4, 10): 40, (5, 1): 5, (5, 2): 10, (5, 3): 15, (5, 4): 20, (5, 5): 25, (5, 6): 30, (5, 7): 35, (5, 8): 40, (5, 9): 45, (5, 10): 50, (6, 1): 6, (6, 2): 12, (6, 3): 18, (6, 4): 24, (6, 5): 30, (6, 6): 36, (6, 7): 42, (6, 8): 48, (6, 9): 54, (6, 10): 60, (7, 1): 7, (7, 2): 14, (7, 3): 21, (7, 4): 28, (7, 5): 35, (7, 6): 42, (7, 7): 49, (7, 8): 56, (7, 9): 63, (7, 10): 70, (8, 1): 8, (8, 2): 16, (8, 3): 24, (8, 4): 32, (8, 5): 40, (8, 6): 48, (8, 7): 56, (8, 8): 64, (8, 9): 72, (8, 10): 80, (9, 1): 9, (9, 2): 18, (9, 3): 27, (9, 4): 36, (9, 5): 45, (9, 6): 54, (9, 7): 63, (9, 8): 72, (9, 9): 81, (9, 10): 90, (10, 1): 10, (10, 2): 20, (10, 3): 30, (10, 4): 40, (10, 5): 50, (10, 6): 60, (10, 7): 70, (10, 8): 80, (10, 9): 90, (10, 10): 100}
>>> d = {[1]:1}
Traceback (most recent call last):
  File "<pyshell#6>", line 1, in <module>
    d = {[1]:1}
TypeError: unhashable type: 'list'
>>> d = {}
>>> s = set()
>>> s = (1)
>>> type(s)
<class 'int'>
>>> s = (1,)
>>> r = 1,
>>> a, b = 1, 2
>>> a, *b = 1,2,3
>>> b
[2, 3]
>>> a
1
>>> a, *b, c = 1,2,3
>>> b
[2]
>>> def foo():
	pass

>>> type(foo)
<class 'function'>
>>> a = []
>>> type(a)
<class 'list'>
>>> def add(a, b):
	'''
'''
	re

	
>>> def foo(val, lst=[]):
	lst.append(val)
	return lst

>>> list1 = foo(10)
>>> list1
[10]
>>> list2 = foo(123,[])
>>> list2
[123]
>>> list3 = foo('a')
>>> list3
[10, 'a']
>>> s = []
>>> list2 = foo(123,s)
>>> list2
[123]
>>> list2 = foo(123)
>>> list2
[10, 'a', 123]
>>> dir(foo)
['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
>>> type(foo)
<class 'function'>
>>> a = []
>>> type(a)
<class 'list'>
>>> help(foo)
Help on function foo in module __main__:

foo(val, lst=[10, 'a', 123])

>>> id(foo)
47179360
>>> bar = foo
>>> bar(1)
[10, 'a', 123, 1]
>>> def add(a, b):
	'''add a b'''
	return a+b

>>> help(add)
Help on function add in module __main__:

add(a, b)
    add a b

>>> def add(a, b):
	'''自定义add a b'''
	return a+b

>>> help(add)
Help on function add in module __main__:

add(a, b)
    自定义add a b

>>> 
